(self.webpackChunkgrapple_client=self.webpackChunkgrapple_client||[]).push([[179],{656:(t,e,r)=>{"use strict";r.a(t,async t=>{var e=r(788),s=r(260),i=r.n(s),a=r(250),n=r(573),s=r(881),t=t([a,s]);[a,s]=t.then?await t:t,new(i().Game)({type:i().CANVAS,width:window.innerWidth>e.Z.mapWidth?e.Z.mapWidth:window.innerWidth,height:window.innerHeight>e.Z.mapHeight?e.Z.mapHeight:window.innerHeight,physics:{default:"arcade",arcade:{debug:!1}},scene:[s.Z,n.Z,a.Z]})})},250:(t,d,p)=>{"use strict";p.a(t,async t=>{p.d(d,{Z:()=>l});var i=p(788),e=p(167),s=p(235),a=p(859),n=p(37),r=p(782),o=p(260),h=p.n(o),t=t([r,n]);[r,n]=t.then?await t:t;class c extends h().Scene{constructor(){super({key:"game"})}async init(){this.speed=5,this.score=0,this.sprintAcceleration=3,this.name=n.Z.isSignedIn.get()?await r.oY():r.Vl()}preload(){this.load.image("player","assets/images/player.png"),this.load.image("bullet","assets/images/bullet.png"),this.load.image("enemy","assets/images/enemy.png"),this.load.image("grass","assets/images/grass.png"),this.load.audio("pew","assets/sounds/shoot.mp3"),this.load.audio("music","assets/sounds/music.mp3"),(0,a.Z)(this)}create(){this.start=this.getTime(),i.Z.socket.emit("ready");const t=this.sound.add("music",{volume:.03,loop:!0});t.play(),this.pew=this.sound.add("pew",{volume:.05}),this.bg=this.add.tileSprite(0,0,i.Z.mapWidth,i.Z.mapHeight,"grass"),this.bg.setOrigin(0),this.scoreText=this.add.text(10,10,"Score: 0"),this.scoreText.setScrollFactor(0,0),this.leaderboardText=this.add.text(2*this.cameras.main.centerX-250,10,""),this.leaderboardText.setScrollFactor(0,0),i.Z.socket.on("leaderboard",t=>{let e="Leaderboard:";t.forEach(t=>{e+=`\n\t${t}`}),this.leaderboardText.text=e}),this.players=this.physics.add.group(),i.Z.socket.on("newPlayer",t=>{const e=this.add.sprite(t.player.x,t.player.y,"enemy");e.nameText=this.add.text(t.player.x-40,t.player.y-100,t.player.name),e.setScale(.5),e.id=t.id,this.players.add(e)}),i.Z.socket.on("players",t=>{Object.keys(t).forEach(e=>{const s=t[e];e!=i.Z.socket.id?this.players.getChildren().forEach(t=>{t.id==e&&(t.nameText.setPosition(s.x-30,s.y-100),t.setPosition(s.x,s.y),t.setAngle(s.angle))}):this.score=s.score})}),i.Z.socket.on("playerLeft",e=>{this.players.getChildren().forEach(t=>{t.id==e&&(t.destroy(),t.nameText.destroy())})}),this.physics.world.setBounds(0,0,i.Z.mapWidth,i.Z.mapHeight),this.cameras.main.setBounds(0,0,i.Z.mapWidth,i.Z.mapHeight),this.player=new s.Z(this),this.myBullets=new e.Z(this),this.theirBullets=this.physics.add.group(),this.physics.add.overlap(this.theirBullets,this.player,(t,e)=>{this.player.resetPos(),i.Z.socket.emit("shot",e.id)}),i.Z.socket.on("newBullet",t=>{const e=this.physics.add.sprite(t.pos.initial.x,t.pos.initial.y,"bullet");e.id=t.id,e.setScale(.07),e.setAngle(t.pos.angle),this.theirBullets.add(e),this.physics.moveTo(e,t.pos.end.x,t.pos.end.y,300)}),this.keys=this.input.keyboard.addKeys("W,A,S,D"),this.shiftKey=this.input.keyboard.addKey(16),this.input.on("pointermove",t=>{var e=h().Math.RAD_TO_DEG*h().Math.Angle.Between(this.player.x,this.player.y,this.game.input.activePointer.worldX,this.game.input.activePointer.worldY);this.player.setAngle(e)})}update(){let t=this.speed;this.shiftKey.isDown&&(t+=this.sprintAcceleration),this.keys.W.isDown&&(this.player.y-=t,this.cameras.main.scrollY-=t,this.player.resetNameText()),this.keys.S.isDown&&(this.player.y+=t,this.cameras.main.scrollY+=t,this.player.resetNameText()),this.keys.A.isDown&&(this.player.x-=t,this.cameras.main.scrollX-=t,this.player.resetNameText()),this.keys.D.isDown&&(this.player.x+=t,this.cameras.main.scrollX+=t,this.player.resetNameText()),this.input.activePointer.isDown&&100<this.showDelta()&&(this.pew.play(),this.myBullets.fire(this.player.x,this.player.y-20),this.start=this.getTime()),this.scoreText.text="Score: "+this.score,i.Z.socket.emit("player",{x:this.player.x,y:this.player.y,angle:this.player.angle})}getTime(){return(new Date).getTime()}showDelta(){return this.getTime()-this.start}}const l=c})},573:(t,e,s)=>{"use strict";s.d(e,{Z:()=>a});e=s(260);class i extends s.n(e)().Scene{constructor(){super({key:"help"})}preload(){this.load.image("grass","assets/images/grass.png")}create(){const t=this.add.tileSprite(0,0,window.innerWidth,window.innerHeight,"grass");t.setOrigin(0),this.backButton=this.add.text(0,0,"BACK",{fill:"#fc6b03"}),this.backButton.setInteractive(),this.backButton.on("pointerdown",()=>{this.scene.switch("menu")}),this.add.text(this.cameras.main.centerX-300,this.cameras.main.centerY-100,`
			How to play:
                Use wasd keys to move
                Hold down the cursor to shoot
                Shoot the other players in order to earn points
			Tip:
				Hold shift to sprint
            `)}}const a=i},881:(t,r,o)=>{"use strict";o.a(t,async t=>{o.d(r,{Z:()=>n});var e=o(260),e=o.n(e),s=o(37),i=o(859),t=t([s]),s=(t.then?await t:t)[0];class a extends e().Scene{constructor(){super({key:"menu"})}preload(){this.load.image("grass","assets/images/grass.png"),(0,i.Z)(this)}create(){const t=this.add.tileSprite(0,0,window.innerWidth,window.innerHeight,"grass");t.setOrigin(0);var e={fill:"#fc6b03",fontSize:"150px",backgroundColor:"#a83232"};this.playButton=this.add.text(this.cameras.main.centerX-200,this.cameras.main.centerY-170,"PLAY",e),this.playButton.setInteractive(),this.playButton.on("pointerdown",()=>{this.scene.switch("game")}),this.helpButton=this.add.text(this.cameras.main.centerX-200,this.cameras.main.centerY+5,"HELP",e),this.helpButton.setInteractive(),this.helpButton.on("pointerdown",()=>{this.scene.switch("help")}),this.signInButton=this.add.text(this.cameras.main.centerX-340,this.cameras.main.centerY+180,s.Z.isSignedIn.get()?"SIGN OUT":"SIGN IN",e),this.signInButton.setInteractive(),this.signInButton.on("pointerdown",()=>{s.Z.isSignedIn.get()?(s.Z.signOut(),this.signInButton.text="SIGN IN"):(s.Z.signIn(),this.signInButton.text="SIGN OUT")})}}const n=a})},167:(t,e,s)=>{"use strict";s.d(e,{Z:()=>r});var i=s(788),e=s(260),e=s.n(e);class a extends e().Physics.Arcade.Sprite{constructor(t,e,s){super(t,e,s,"bullet"),this.scene=t}fire(t,e){i.Z.socket.emit("newBullet",{angle:this.scene.player.angle,initial:{x:t,y:e},end:{x:this.scene.game.input.activePointer.worldX,y:this.scene.game.input.activePointer.worldY}}),this.body.reset(t,e),this.angle=this.scene.player.angle,this.scene.physics.moveTo(this,this.scene.game.input.activePointer.worldX,this.scene.game.input.activePointer.worldY,300),this.setActive(!0),this.setVisible(!0)}preUpdate(t,e){super.preUpdate(t,e),(this.y<=0||this.y>=i.Z.mapHeight||this.x<=0||this.x>=i.Z.mapWidth)&&(this.setActive(!1),this.setVisible(!1))}}class n extends e().Physics.Arcade.Group{constructor(t){super(t.physics.world,t),this.createMultiple({frameQuantity:40,key:"bullet",setScale:{x:.07,y:.07},active:!1,visible:!1,classType:a})}fire(t,e){const s=this.getFirstDead(!1);s&&s.fire(t,e)}}const r=n},788:(t,e,s)=>{"use strict";s.d(e,{Z:()=>a}),console.log("We are  in production");const i=s(751),a={socket:i(),mapHeight:1e3,mapWidth:2e3}},859:(t,e,s)=>{"use strict";s.d(e,{Z:()=>i});var r=s(788);const i=function(t){const e=t.add.graphics();e.fillStyle(7314491),e.fillRect(0,0,r.Z.mapWidth,r.Z.mapHeight);const s=t.make.text({x:r.Z.mapWidth/2,y:r.Z.mapHeight/2-15,text:"Loading..."});s.setOrigin(.5,.5);const i=t.add.graphics();i.fillStyle(3690012,.8),i.fillRect(r.Z.mapWidth/2-165,r.Z.mapHeight/2,320,50);const a=t.add.graphics(),n=t.make.text({x:r.Z.mapWidth/2-20,y:r.Z.mapHeight/2+20});n.setOrigin(.5,.5),t.load.on("progress",t=>{a.clear(),a.fillStyle(5798959),a.fillRect(r.Z.mapWidth/2+10-165,r.Z.mapHeight/2+10,300*t,30),n.setText(100*t+"%")}),t.load.on("fileprogress",t=>{}),t.load.on("complete",()=>{e.destroy(),a.destroy(),i.destroy(),n.destroy()})}},782:(t,a,n)=>{"use strict";n.a(t,async t=>{n.d(a,{Vl:()=>e,oY:()=>i});var t=t([s=n(37)]),s=(t.then?await t:t)[0];const e=()=>prompt("What would you like to be called?");const i=()=>new Promise((e,t)=>{fetch("api/getName",{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({id:s.Z.currentUser.get().Qs.zt})}).then(t=>t.json()).then(async({name:t})=>{e(""!=t?t:await(void 0).setName())})})})},37:(t,s,i)=>{"use strict";i.a(t,async t=>{i.d(s,{Z:()=>e});const e=await new Promise((t,e)=>{const s=new Promise((t,e)=>{gapi.load("client",()=>{gapi.client.init({apiKey:"L30fdoj3Mz1RL8KEGEQx8kGR",clientId:"874102344684-gu4p8e3or2skov57s17tra58v2blvc75.apps.googleusercontent.com",scope:"https://www.googleapis.com/auth/userinfo.email"}).then(t).catch(e)})});s.then(()=>{const e=gapi.auth2.getAuthInstance();e.isSignedIn.listen(t=>{t&&(console.log(e.currentUser.get()),fetch("api/createUser",{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({id:e.currentUser.get().Qs.zt})}).catch(console.error))}),t(e)}),s.catch(e)});t()},1)},235:(t,e,s)=>{"use strict";s.d(e,{Z:()=>n});var i=s(788),e=s(260);class a extends s.n(e)().Physics.Arcade.Sprite{constructor(t){super(t,Math.random()*i.Z.mapWidth,Math.random()*i.Z.mapHeight,"player"),this.nameText=t.add.text(this.x-40,this.y-100,t.name),t.add.existing(this),t.physics.add.existing(this),this.setScale(.5),t.cameras.main.startFollow(this,!0),this.setCollideWorldBounds(!0),i.Z.socket.emit("newPlayer",{x:this.x,y:this.y,name:this.scene.name})}resetPos(){this.setPosition(Math.random()*i.Z.mapWidth,Math.random()*i.Z.mapHeight),this.resetNameText()}resetNameText(){this.nameText.setPosition(this.x-40,this.y-100)}}const n=a}},t=>{"use strict";t.O(0,[216],()=>t(t.s=656));t.O()}]);